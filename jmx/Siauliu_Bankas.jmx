<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="PerformanceTest" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.comments"></stringProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${__P(loops, 1)}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(threads, 1)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(period, 0)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">30</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Loop Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">loop_counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">true</boolProp>
        </CounterConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Thread Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">thread_counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-1562235024">thread_id</stringProp>
            <stringProp name="100589">env</stringProp>
            <stringProp name="-1587595929">strategy_id</stringProp>
            <stringProp name="-1352291591">credit</stringProp>
            <stringProp name="95458540">debit</stringProp>
            <stringProp name="1360191598">payType0</stringProp>
            <stringProp name="1360191599">payType1</stringProp>
            <stringProp name="1360191600">payType2</stringProp>
            <stringProp name="1360191601">payType3</stringProp>
            <stringProp name="3059624">cot0</stringProp>
            <stringProp name="3059625">cot1</stringProp>
            <stringProp name="3059626">cot2</stringProp>
            <stringProp name="3059627">cot3</stringProp>
            <stringProp name="3059628">cot4</stringProp>
            <stringProp name="94834659">code0</stringProp>
            <stringProp name="94834660">code1</stringProp>
            <stringProp name="94834661">code2</stringProp>
            <stringProp name="94834662">code3</stringProp>
            <stringProp name="94834663">code4</stringProp>
            <stringProp name="94834664">code5</stringProp>
            <stringProp name="94834665">code6</stringProp>
            <stringProp name="94834666">code7</stringProp>
            <stringProp name="94834667">code8</stringProp>
            <stringProp name="94834668">code9</stringProp>
            <stringProp name="111214">pr0</stringProp>
            <stringProp name="111215">pr1</stringProp>
            <stringProp name="111216">pr2</stringProp>
            <stringProp name="111217">pr3</stringProp>
            <stringProp name="111218">pr4</stringProp>
            <stringProp name="1457629887">PPP_Client9</stringProp>
            <stringProp name="67081517">Empty</stringProp>
            <stringProp name="79533">PT1</stringProp>
            <stringProp name="79534">PT2</stringProp>
            <stringProp name="79535">PT3</stringProp>
            <stringProp name="79536">PT4</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="49994281">
              <stringProp name="118040362">${__UUID()}</stringProp>
              <stringProp name="2085912802">${__P(env,pp)}</stringProp>
              <stringProp name="-243756788">${__P(strategy_id,1522)}</stringProp>
              <stringProp name="2026542873">Credit</stringProp>
              <stringProp name="65905868">Debit</stringProp>
              <stringProp name="-1827576431">TARGET</stringProp>
              <stringProp name="2541507">SEPA</stringProp>
              <stringProp name="73662189">MT103</stringProp>
              <stringProp name="2124343735">SEPA-INSTANT</stringProp>
              <stringProp name="84323">USA</stringProp>
              <stringProp name="72639">IND</stringProp>
              <stringProp name="70359">GBR</stringProp>
              <stringProp name="66033">BRA</stringProp>
              <stringProp name="73209">JAP</stringProp>
              <stringProp name="84326">USD</stringProp>
              <stringProp name="69026">EUR</stringProp>
              <stringProp name="81503">RUB</stringProp>
              <stringProp name="70357">GBP</stringProp>
              <stringProp name="77482">NOK</stringProp>
              <stringProp name="81977">SEK</stringProp>
              <stringProp name="67748">DKK</stringProp>
              <stringProp name="66263">BYN</stringProp>
              <stringProp name="79314">PLN</stringProp>
              <stringProp name="66689">CHF</stringProp>
              <stringProp name="-2088097971">Roman Abramovich</stringProp>
              <stringProp name="383949672">Donal Trump</stringProp>
              <stringProp name="-960552052">Load Test</stringProp>
              <stringProp name="-1860562215">David Headly</stringProp>
              <stringProp name="-1772404304">Osama Bin Laden</stringProp>
              <stringProp name="1457629887">PPP_Client9</stringProp>
              <stringProp name="1084434432">                    </stringProp>
              <stringProp name="2345">IR</stringProp>
              <stringProp name="2341">IN</stringProp>
              <stringProp name="2159">CR</stringProp>
              <stringProp name="2155">CN</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Basic ${__P(token)}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;accountStrategyId&quot;: 1522,&#xd;
    &quot;accountReference&quot;: &quot;&quot;,&#xd;
    &quot;application&quot;: {&#xd;
        &quot;clientApplicationPurpose&quot;: &quot;PAYMENTSCREENING&quot;,&#xd;
        &quot;clientRiskLevel&quot;: &quot;${__Random(1,5,rl)}&quot;,&#xd;
        &quot;customerReference&quot;: &quot;ABCD&quot;&#xd;
    },&#xd;
    &quot;company&quot;: [&#xd;
        {&#xd;
            &quot;clientReference&quot;: &quot;&quot;,&#xd;
            &quot;isPrimary&quot;: true,&#xd;
            &quot;businessName&quot;: &quot;${__RandomString(15,abcdeghijklmnopqrstuvwxyz, bname)}&quot;,&#xd;
            &quot;companyType&quot;: &quot;OTHER&quot;,&#xd;
            &quot;companyAddress&quot;: [&#xd;
                {&#xd;
                    &quot;standardised&quot;: {&#xd;
                        &quot;buildingNumber&quot;: &quot;&quot;,&#xd;
                        &quot;entrance&quot;: &quot;&quot;,&#xd;
                        &quot;flat&quot;: &quot;&quot;,&#xd;
                        &quot;houseName&quot;: &quot;&quot;,&#xd;
                        &quot;houseNumber&quot;: &quot;&quot;,&#xd;
                        &quot;street&quot;: &quot;&quot;,&#xd;
                        &quot;city&quot;: &quot;&quot;,&#xd;
                        &quot;cityDistrict&quot;: &quot;&quot;,&#xd;
                        &quot;suburb&quot;: &quot;&quot;,&#xd;
                        &quot;state&quot;: &quot;&quot;,&#xd;
                        &quot;stateDistrict&quot;: &quot;&quot;,&#xd;
                        &quot;postcode&quot;: &quot;&quot;,&#xd;
                        &quot;poBox&quot;: &quot;&quot;,&#xd;
                        &quot;country&quot;: &quot;&quot;&#xd;
                    }&#xd;
                }&#xd;
            ],&#xd;
            &quot;finance&quot;: {&#xd;
                &quot;bankAccount&quot;: [&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;${__RandomString(15,abcdeghijklmnopqrstuvwxyz,)}&quot;,&#xd;
                        &quot;sortCode&quot;: &quot;&quot;,&#xd;
                        &quot;accountNumber&quot;: &quot;&quot;,&#xd;
                        &quot;IBAN&quot;: &quot;&quot;,&#xd;
                        &quot;swiftCode&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;clientReference&quot;: &quot;&quot;, &#xd;
            &quot;isPrimary&quot;: false,&#xd;
            &quot;businessName&quot;: &quot;${__RandomString(15,abcdeghijklmnopqrstuvwxyz, bname)}&quot;,&#xd;
            &quot;companyType&quot;: &quot;OTHER&quot;,&#xd;
            &quot;companyAddress&quot;: [&#xd;
                {&#xd;
                    &quot;standardised&quot;: {&#xd;
                        &quot;buildingNumber&quot;: &quot;&quot;,&#xd;
                        &quot;entrance&quot;: &quot;&quot;,&#xd;
                        &quot;flat&quot;: &quot;&quot;,&#xd;
                        &quot;houseName&quot;: &quot;&quot;,&#xd;
                        &quot;houseNumber&quot;: &quot;&quot;,&#xd;
                        &quot;street&quot;: &quot;&quot;,&#xd;
                        &quot;city&quot;: &quot;&quot;,&#xd;
                        &quot;cityDistrict&quot;: &quot;&quot;,&#xd;
                        &quot;suburb&quot;: &quot;&quot;,&#xd;
                        &quot;state&quot;: &quot;&quot;,&#xd;
                        &quot;stateDistrict&quot;: &quot;&quot;,&#xd;
                        &quot;postcode&quot;: &quot;&quot;,&#xd;
                        &quot;poBox&quot;: &quot;&quot;,&#xd;
                        &quot;country&quot;: &quot;&quot;&#xd;
                    }&#xd;
                }&#xd;
            ],&#xd;
            &quot;finance&quot;: {&#xd;
                &quot;bankAccount&quot;: [&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;${__RandomString(15,abcdeghijklmnopqrstuvwxyz,)}&quot;,&#xd;
                        &quot;sortCode&quot;: &quot;&quot;,&#xd;
                        &quot;accountNumber&quot;: &quot;&quot;,&#xd;
                        &quot;IBAN&quot;: &quot;&quot;,&#xd;
                        &quot;swiftCode&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;financialAccount&quot;: {&#xd;
        &quot;financialTransaction&quot;: [&#xd;
            {&#xd;
                &quot;clientReference&quot;: &quot;&quot;,&#xd;
                &quot;bicCode&quot;: &quot;GAZPRUMM&quot;,&#xd;
                &quot;sortCode&quot;: &quot;000000&quot;,&#xd;
                &quot;accountNumber&quot;: &quot;000000000&quot;,&#xd;
                &quot;accountHolder&quot;: &quot;Load Test&quot;, &#xd;
                &quot;IBAN&quot;: &quot;123456789&quot;,&#xd;
                &quot;creditOrDebit&quot;:&quot;${__RandomFromMultipleVars(credit|debit,)}&quot;,&#xd;
                &quot;currencyCode&quot;: &quot;EUR&quot;,&#xd;
                &quot;paymentType&quot;: &quot;${__RandomFromMultipleVars(payType0|payType1|payType2|payType3,)}&quot;,&#xd;
                &quot;countryOfTransaction&quot;: &quot;${__RandomFromMultipleVars(cot0|cot1|cot2|cot3|cot4,)}&quot;,&#xd;
                &quot;amount&quot;: &quot;${__Random(50000,5000000)}&quot;,&#xd;
                &quot;paymentReference&quot;: &quot;${__RandomFromMultipleVars(pr0|pr1|pr2|pr3|pr4,)}&quot;,&#xd;
                &quot;effectiveDateTime&quot;: &quot;2023-11-23 10:03:15&quot;,&#xd;
                &quot;externalRuleOutcomes&quot;: [&#xd;
                    {&#xd;
                        &quot;code&quot;: &quot;Risk Attribute&quot;,&#xd;
                        &quot;outcome&quot;: &quot;${__RandomFromMultipleVars(PPP_Client9|Empty,)}&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;code&quot;: &quot;Party Type&quot;,&#xd;
                        &quot;outcome&quot;: &quot;${__RandomFromMultipleVars(PT1|PT2|PT3|PT4,)}&quot; &#xd;
                    },&#xd;
                    {&#xd;
                        &quot;code&quot;: &quot;${__RandomFromMultipleVars(code0|code1|code2|code3|code4|code5|code6|code7|code8|code9,)}&quot;,&#xd;
                        &quot;description&quot;: &quot;Original Currency&quot;,&#xd;
                        &quot;outcome&quot;: &quot;${__Random(50000,5000000)}&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${env}.trunarrative.cloud</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/TruAccountAPI/rest/Accounts/v1/RunStrategy</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${__P(requests,1)}</stringProp>
        </LoopController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">counter</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">true</boolProp>
            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
          </CounterConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${loop_counter} Request ${thread_counter}:${counter}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;accountStrategyId&quot;: 1522,&#xd;
    &quot;accountReference&quot;: &quot;&quot;,&#xd;
    &quot;application&quot;: {&#xd;
        &quot;clientApplicationPurpose&quot;: &quot;PAYMENTSCREENING&quot;,&#xd;
        &quot;clientRiskLevel&quot;: &quot;${__Random(1,5,rl)}&quot;,&#xd;
        &quot;customerReference&quot;: &quot;${__RandomString(4,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}&quot;&#xd;
    },&#xd;
    &quot;company&quot;: [&#xd;
        {&#xd;
            &quot;clientReference&quot;: &quot;&quot;,&#xd;
            &quot;isPrimary&quot;: true,&#xd;
            &quot;businessName&quot;: &quot;${__RandomString(15,abcdeghijklmnopqrstuvwxyz, bname)}&quot;,&#xd;
            &quot;companyType&quot;: &quot;OTHER&quot;,&#xd;
            &quot;companyAddress&quot;: [&#xd;
                {&#xd;
                    &quot;standardised&quot;: {&#xd;
                        &quot;buildingNumber&quot;: &quot;&quot;,&#xd;
                        &quot;entrance&quot;: &quot;&quot;,&#xd;
                        &quot;flat&quot;: &quot;&quot;,&#xd;
                        &quot;houseName&quot;: &quot;&quot;,&#xd;
                        &quot;houseNumber&quot;: &quot;&quot;,&#xd;
                        &quot;street&quot;: &quot;&quot;,&#xd;
                        &quot;city&quot;: &quot;&quot;,&#xd;
                        &quot;cityDistrict&quot;: &quot;&quot;,&#xd;
                        &quot;suburb&quot;: &quot;&quot;,&#xd;
                        &quot;state&quot;: &quot;&quot;,&#xd;
                        &quot;stateDistrict&quot;: &quot;&quot;,&#xd;
                        &quot;postcode&quot;: &quot;&quot;,&#xd;
                        &quot;poBox&quot;: &quot;&quot;,&#xd;
                        &quot;country&quot;: &quot;&quot;&#xd;
                    }&#xd;
                }&#xd;
            ],&#xd;
            &quot;finance&quot;: {&#xd;
                &quot;bankAccount&quot;: [&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;${__RandomString(15,abcdeghijklmnopqrstuvwxyz,)}&quot;,&#xd;
                        &quot;sortCode&quot;: &quot;&quot;,&#xd;
                        &quot;accountNumber&quot;: &quot;&quot;,&#xd;
                        &quot;IBAN&quot;: &quot;&quot;,&#xd;
                        &quot;swiftCode&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;clientReference&quot;: &quot;&quot;, &#xd;
            &quot;isPrimary&quot;: false,&#xd;
            &quot;businessName&quot;: &quot;${__RandomString(15,abcdeghijklmnopqrstuvwxyz, bname)}&quot;,&#xd;
            &quot;companyType&quot;: &quot;OTHER&quot;,&#xd;
            &quot;companyAddress&quot;: [&#xd;
                {&#xd;
                    &quot;standardised&quot;: {&#xd;
                        &quot;buildingNumber&quot;: &quot;&quot;,&#xd;
                        &quot;entrance&quot;: &quot;&quot;,&#xd;
                        &quot;flat&quot;: &quot;&quot;,&#xd;
                        &quot;houseName&quot;: &quot;&quot;,&#xd;
                        &quot;houseNumber&quot;: &quot;&quot;,&#xd;
                        &quot;street&quot;: &quot;&quot;,&#xd;
                        &quot;city&quot;: &quot;&quot;,&#xd;
                        &quot;cityDistrict&quot;: &quot;&quot;,&#xd;
                        &quot;suburb&quot;: &quot;&quot;,&#xd;
                        &quot;state&quot;: &quot;&quot;,&#xd;
                        &quot;stateDistrict&quot;: &quot;&quot;,&#xd;
                        &quot;postcode&quot;: &quot;&quot;,&#xd;
                        &quot;poBox&quot;: &quot;&quot;,&#xd;
                        &quot;country&quot;: &quot;&quot;&#xd;
                    }&#xd;
                }&#xd;
            ],&#xd;
            &quot;finance&quot;: {&#xd;
                &quot;bankAccount&quot;: [&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;${__RandomString(15,abcdeghijklmnopqrstuvwxyz,)}&quot;,&#xd;
                        &quot;sortCode&quot;: &quot;&quot;,&#xd;
                        &quot;accountNumber&quot;: &quot;&quot;,&#xd;
                        &quot;IBAN&quot;: &quot;&quot;,&#xd;
                        &quot;swiftCode&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;financialAccount&quot;: {&#xd;
        &quot;financialTransaction&quot;: [&#xd;
            {&#xd;
                &quot;clientReference&quot;: &quot;&quot;,&#xd;
                &quot;bicCode&quot;: &quot;GAZPRUMM&quot;,&#xd;
                &quot;sortCode&quot;: &quot;000000&quot;,&#xd;
                &quot;accountNumber&quot;: &quot;000000000&quot;,&#xd;
                &quot;accountHolder&quot;: &quot;Load Test&quot;, &#xd;
                &quot;IBAN&quot;: &quot;123456789&quot;,&#xd;
                &quot;creditOrDebit&quot;:&quot;${__RandomFromMultipleVars(credit|debit,)}&quot;,&#xd;
                &quot;currencyCode&quot;: &quot;EUR&quot;,&#xd;
                &quot;paymentType&quot;: &quot;${__RandomFromMultipleVars(payType0|payType1|payType2|payType3,)}&quot;,&#xd;
                &quot;countryOfTransaction&quot;: &quot;${__RandomFromMultipleVars(cot0|cot1|cot2|cot3|cot4,)}&quot;,&#xd;
                &quot;amount&quot;: &quot;${__Random(50000,5000000)}&quot;,&#xd;
                &quot;paymentReference&quot;: &quot;${__RandomFromMultipleVars(pr0|pr1|pr2|pr3|pr4,)}&quot;,&#xd;
                &quot;effectiveDateTime&quot;: &quot;2023-11-23 10:03:15&quot;,&#xd;
                &quot;externalRuleOutcomes&quot;: [&#xd;
                    {&#xd;
                        &quot;code&quot;: &quot;Risk Attribute&quot;,&#xd;
                        &quot;outcome&quot;: &quot;${__RandomFromMultipleVars(PPP_Client9|Empty,)}&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;code&quot;: &quot;Party Type&quot;,&#xd;
                        &quot;outcome&quot;: &quot;${__RandomFromMultipleVars(PT1|PT2|PT3|PT4,)}&quot; &#xd;
                    },&#xd;
                    {&#xd;
                        &quot;code&quot;: &quot;${__RandomFromMultipleVars(code0|code1|code2|code3|code4|code5|code6|code7|code8|code9,)}&quot;,&#xd;
                        &quot;description&quot;: &quot;Original Currency&quot;,&#xd;
                        &quot;outcome&quot;: &quot;${__Random(50000,5000000)}&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>

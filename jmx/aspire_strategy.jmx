<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="PerformanceTest" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">${__P(loops, 1)}</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(threads, 1)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(period, 0)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">30</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Loop Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">loop_counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">true</boolProp>
        </CounterConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Thread Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">thread_counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-1562235024">thread_id</stringProp>
            <stringProp name="100589">env</stringProp>
            <stringProp name="-1587595929">strategy_id</stringProp>
            <stringProp name="-1352291591">credit</stringProp>
            <stringProp name="95458540">debit</stringProp>
            <stringProp name="2988448">acr0</stringProp>
            <stringProp name="2988449">acr1</stringProp>
            <stringProp name="2988450">acr2</stringProp>
            <stringProp name="2988451">acr3</stringProp>
            <stringProp name="2988452">acr4</stringProp>
            <stringProp name="2988453">acr5</stringProp>
            <stringProp name="2988454">acr6</stringProp>
            <stringProp name="2988455">acr7</stringProp>
            <stringProp name="2988456">acr8</stringProp>
            <stringProp name="2988457">acr9</stringProp>
            <stringProp name="92641967">acr10</stringProp>
            <stringProp name="1360191598">payType0</stringProp>
            <stringProp name="1360191599">payType1</stringProp>
            <stringProp name="1360191600">payType2</stringProp>
            <stringProp name="1360191601">payType3</stringProp>
            <stringProp name="1360191602">payType4</stringProp>
            <stringProp name="84501254">clientRiskLevel0</stringProp>
            <stringProp name="84501255">clientRiskLevel1</stringProp>
            <stringProp name="84501256">clientRiskLevel2</stringProp>
            <stringProp name="1404223996">paymentSubType0</stringProp>
            <stringProp name="1404223997">paymentSubType1</stringProp>
            <stringProp name="1404223998">paymentSubType2</stringProp>
            <stringProp name="1404223999">paymentSubType3</stringProp>
            <stringProp name="1455316997">newClient0</stringProp>
            <stringProp name="1455316998">newClient1</stringProp>
            <stringProp name="1976615030">bicCountry0</stringProp>
            <stringProp name="1976615031">bicCountry1</stringProp>
            <stringProp name="1976615032">bicCountry2</stringProp>
            <stringProp name="1976615033">bicCountry3</stringProp>
            <stringProp name="1976615034">bicCountry4</stringProp>
            <stringProp name="1809684759">accountHolder0</stringProp>
            <stringProp name="1809684760">accountHolder1</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-1875645101">
              <stringProp name="118040362">${__UUID()}</stringProp>
              <stringProp name="2085912802">${__P(env,pp)}</stringProp>
              <stringProp name="-244650518">${__P(strategy_id,1432)}</stringProp>
              <stringProp name="1996005113">CREDIT</stringProp>
              <stringProp name="64920780">DEBIT</stringProp>
              <stringProp name="-1870021057">AC211285</stringProp>
              <stringProp name="-1870021056">AC211286</stringProp>
              <stringProp name="-1870021055">AC211287</stringProp>
              <stringProp name="-1870021054">AC211288</stringProp>
              <stringProp name="-1870021053">AC211289</stringProp>
              <stringProp name="-1870021031">AC211290</stringProp>
              <stringProp name="-1870021030">AC211291</stringProp>
              <stringProp name="-1870021029">AC211292</stringProp>
              <stringProp name="-1870021028">AC211293</stringProp>
              <stringProp name="-1870021027">AC211294</stringProp>
              <stringProp name="-1870021026">AC211295</stringProp>
              <stringProp name="84326">USD</stringProp>
              <stringProp name="82032">SGD</stringProp>
              <stringProp name="72343">IDR</stringProp>
              <stringProp name="69026">EUR</stringProp>
              <stringProp name="70357">GBP</stringProp>
              <stringProp name="2217378">HIGH</stringProp>
              <stringProp name="-2024701067">MEDIUM</stringProp>
              <stringProp name="75572">LOW</stringProp>
              <stringProp name="-1085510111">Default</stringProp>
              <stringProp name="2061072">CARD</stringProp>
              <stringProp name="356521835">Card-Reversal</stringProp>
              <stringProp name="-1720877770">Advanced-Transfer</stringProp>
              <stringProp name="87751">YES</stringProp>
              <stringProp name="2497">NO</stringProp>
              <stringProp name="2644">SG</stringProp>
              <stringProp name="2718">US</stringProp>
              <stringProp name="2341">IN</stringProp>
              <stringProp name="2559">PO</stringProp>
              <stringProp name="2217">EN</stringProp>
              <stringProp name="32"> </stringProp>
              <stringProp name="-901736591">HIGHRISK</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Basic ${__P(token)}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${env}.trunarrative.cloud</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/TruAccountAPI/rest/Accounts/v1/RunStrategy</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${__P(requests,1)}</stringProp>
        </LoopController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">counter</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">true</boolProp>
            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
          </CounterConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${loop_counter} Request ${thread_counter}:${counter}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;accountStrategyId&quot;: 1432,&#xd;
    &quot;accountReference&quot;: &quot;${__RandomFromMultipleVars(acr0|acr1|acr2|acr3|acr4|acr5|acr6|acr7|acr8|acr9|acr10,)}&quot;,&#xd;
    &quot;application&quot;: {&#xd;
        &quot;clientApplicationPurpose&quot;: &quot;COUNTERPARTYSCREENING&quot;,&#xd;
        &quot;clientRiskLevel&quot;: &quot;${__RandomFromMultipleVars(clientRiskLevel0|clientRiskLevel1|clientRiskLevel2,)}&quot;,&#xd;
    },&#xd;
    &quot;company&quot;: [&#xd;
        {&#xd;
            &quot;clientReference&quot;: &quot;&quot;,&#xd;
            &quot;isPrimary&quot;: false, //always false for counterparty&#xd;
            &quot;businessName&quot;: &quot;Roman Abramovich&quot;, //company object can be used to pass both company or individual entities (counterparty)&#xd;
            &quot;companyType&quot;: &quot;OTHER&quot;,&#xd;
            &quot;externalRuleOutcomes&quot;: [&#xd;
                {&#xd;
                    &quot;code&quot;: &quot;Transaction Value&quot;,&#xd;
                    &quot;name&quot;: &quot;USD&quot;,&#xd;
                    &quot;description&quot;: &quot;&quot;,&#xd;
                    &quot;outcome&quot;: &quot;35000&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;financialAccount&quot;: {&#xd;
        &quot;financialTransaction&quot;: [&#xd;
            {&#xd;
                &quot;clientReference&quot;: &quot;&quot;, //Transaction reference&#xd;
                &quot;bicCode&quot;: &quot;ABCDSG123&quot;,&#xd;
                &quot;sortCode&quot;: &quot;000000&quot;, //placeholder value&#xd;
                &quot;accountNumber&quot;: &quot;${__RandomString(8,123456789,myvar)}&quot;,&#xd;
                &quot;accountHolder&quot;: &quot;${__RandomFromMultipleVars(accountHolder0|accountHolder1,)}&quot;,&#xd;
                &quot;IBAN&quot;: &quot;${myvar}&quot;,&#xd;
                &quot;creditOrDebit&quot;: &quot;${__RandomFromMultipleVars(credit|debit,)}&quot;,&#xd;
                &quot;currencyCode&quot;: &quot;USD&quot;,&#xd;
                &quot;paymentType&quot;: &quot;${__RandomFromMultipleVars(payType0|payType1|payType2|payType3|payType4,)}&quot;,&#xd;
                &quot;paymentSubtype&quot;: &quot;${__RandomFromMultipleVars(paymentSubType0|paymentSubType1|paymentSubType2|paymentSubType3,)}&quot;,&#xd;
                &quot;countryOfTransaction&quot;: &quot;USA&quot;, //ISO3 Code&#xd;
                &quot;amount&quot;: &quot;${__Random(1,500)}.${__Random(0,9)}${__Random(0,9)}&quot;,&#xd;
                &quot;paymentReference&quot;: &quot;${__RandomString(10,abcdeghijklmnopqrstuvwxyz, pr)}&quot;,&#xd;
                &quot;effectiveDateTime&quot;: &quot;${__dateTimeConvert(${__timeShift(,${__time()},-PT${__Random(10000,100000)}M,,)},,yyyy-MM-dd HH:mm:ss,date)}.000&quot;,&#xd;
                &quot;externalRuleOutcomes&quot;: [&#xd;
                    {&#xd;
                        &quot;code&quot;: &quot;Credit Transaction Count&quot;,&#xd;
                        &quot;outcome&quot;: &quot;${__Random(0,9,)}&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;code&quot;: &quot;Debit Transaction Count&quot;,&#xd;
                        &quot;outcome&quot;: &quot;${__Random(0,9,)}&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;code&quot;: &quot;NEW-CLIENT&quot;,&#xd;
                        &quot;outcome&quot;: &quot;${__RandomFromMultipleVars(newClient0|newClient1,)}&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;code&quot;: &quot;BIC-COUNTRY&quot;,&#xd;
                        &quot;outcome&quot;: &quot;${__RandomFromMultipleVars(SG|US|IN|PO|EN,)}&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;code&quot;: &quot;Counterparty Name&quot;,&#xd;
                        &quot;outcome&quot;: &quot;Vladimir Putin&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>

<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="PerformanceTest" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">${__P(loops, 1)}</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(threads, 1)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(period, 0)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">30</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Loop Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">loop_counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">true</boolProp>
        </CounterConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Thread Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">thread_counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-1562235024">thread_id</stringProp>
            <stringProp name="100589">env</stringProp>
            <stringProp name="-1587595929">strategy_id</stringProp>
            <stringProp name="-1352291591">credit</stringProp>
            <stringProp name="95458540">debit</stringProp>
            <stringProp name="2988448">acr0</stringProp>
            <stringProp name="2988449">acr1</stringProp>
            <stringProp name="2988450">acr2</stringProp>
            <stringProp name="2988451">acr3</stringProp>
            <stringProp name="2988452">acr4</stringProp>
            <stringProp name="2988453">acr5</stringProp>
            <stringProp name="2988454">acr6</stringProp>
            <stringProp name="2988455">acr7</stringProp>
            <stringProp name="2988456">acr8</stringProp>
            <stringProp name="2988457">acr9</stringProp>
            <stringProp name="3059438">con0</stringProp>
            <stringProp name="3059439">con1</stringProp>
            <stringProp name="3059440">con2</stringProp>
            <stringProp name="1360191598">payType0</stringProp>
            <stringProp name="1360191599">payType1</stringProp>
            <stringProp name="1360191600">payType2</stringProp>
            <stringProp name="1360191601">payType3</stringProp>
            <stringProp name="-1395399360">cCode0</stringProp>
            <stringProp name="-1395399359">cCode1</stringProp>
            <stringProp name="-1395399358">cCode2</stringProp>
            <stringProp name="-1395399357">cCode3</stringProp>
            <stringProp name="3059624">cot0</stringProp>
            <stringProp name="3059625">cot1</stringProp>
            <stringProp name="3059626">cot2</stringProp>
            <stringProp name="57991966">outcome0</stringProp>
            <stringProp name="57991967">outcome1</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="234469815">
              <stringProp name="118040362">${__UUID()}</stringProp>
              <stringProp name="2085912802">${__P(env,pp)}</stringProp>
              <stringProp name="-244561145">${__P(strategy_id,1462)}</stringProp>
              <stringProp name="1996005113">CREDIT</stringProp>
              <stringProp name="64920780">DEBIT</stringProp>
              <stringProp name="1093912742">KLMNOPQRST89</stringProp>
              <stringProp name="306087302">abcdefghij12</stringProp>
              <stringProp name="-1223369722">klmnopqrst34</stringProp>
              <stringProp name="-173698042">uvwxyzABCD56</stringProp>
              <stringProp name="1259521319">EFGHIJKLMNOP78</stringProp>
              <stringProp name="-682754948">QRSTUVWXYZ90</stringProp>
              <stringProp name="1634519036">1234567890ab</stringProp>
              <stringProp name="-1528879353">cdefghijklMN23</stringProp>
              <stringProp name="-1784852409">opqrstuvwxYZ45</stringProp>
              <stringProp name="-1671597530">ABCDEFGHIJ67</stringProp>
              <stringProp name="70359">GBR</stringProp>
              <stringProp name="84323">USA</stringProp>
              <stringProp name="69877">FRA</stringProp>
              <stringProp name="79316467">SWIFT</stringProp>
              <stringProp name="2551786">SPFS</stringProp>
              <stringProp name="2061107">CASH</stringProp>
              <stringProp name="-177023839">ClearJunction</stringProp>
              <stringProp name="81503">RUB</stringProp>
              <stringProp name="70357">GBP</stringProp>
              <stringProp name="84326">USD</stringProp>
              <stringProp name="69026">EUR</stringProp>
              <stringProp name="70359">GBR</stringProp>
              <stringProp name="84323">USA</stringProp>
              <stringProp name="69877">FRA</stringProp>
              <stringProp name="1947172537">Individual</stringProp>
              <stringProp name="-1679829923">Company</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Basic ${__P(token)}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${env}.trunarrative.cloud</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/TruAccountAPI/rest/Accounts/v1/RunStrategy</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${__P(requests,1)}</stringProp>
        </LoopController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">counter</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">true</boolProp>
            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
          </CounterConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${loop_counter} Request ${thread_counter}:${counter}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;accountStrategyId&quot;: ${strategy_id},&#xd;
    &quot;accountReference&quot;: &quot;${__RandomFromMultipleVars(acr0|acr1|acr2|acr3|acr4|acr5|acr6|acr7|acr8|acr9,)}&quot;,&#xd;
    &quot;application&quot;: {&#xd;
        &quot;ClientRiskLevel&quot;: &quot;${__Random(1,5,rl)}&quot;&#xd;
    },&#xd;
    &quot;person&quot;: [&#xd;
        {&#xd;
            &quot;role&quot;: &quot;APPLICANT&quot;,&#xd;
            &quot;clientReference&quot;: &quot;Perf-Test-${thread_id}&quot;,&#xd;
            &quot;isPrimary&quot;: true,&#xd;
            &quot;dateOfBirth&quot;: &quot;${__RandomDate(,1964-01-01,2005-01-01,,)}&quot;,&#xd;
            &quot;FirstName&quot;: &quot;${__RandomString(6,abcdeghijklmnopqrstuvwxyz, fname)}&quot;,&#xd;
            &quot;lastName&quot;: &quot;${__RandomString(10,abcdeghijklmnopqrstuvwxyz, lname)}&quot;,&#xd;
            &quot;countryOfNationality&quot;: &quot;${__RandomFromMultipleVars(con0|con1|con2,)}&quot; &#xd;
        }&#xd;
    ],&#xd;
    &quot;company&quot;: [&#xd;
        {&#xd;
            &quot;companyType&quot;: &quot;ASSOCIATION&quot;,&#xd;
            &quot;clientReference&quot;: &quot;&quot;,&#xd;
            &quot;isPrimary&quot;: false,&#xd;
            &quot;businessName&quot;: &quot;${__RandomString(15,abcdeghijklmnopqrstuvwxyz, bname)}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;FinancialAccount&quot;: {&#xd;
        &quot;financialTransaction&quot;: [&#xd;
            {&#xd;
                &quot;clientReference&quot;: &quot;&quot;,&#xd;
                &quot;effectiveDateTime&quot;: &quot;${__dateTimeConvert(${__timeShift(,${__time()},-PT${__Random(10000,100000)}M,,)},,yyyy-MM-dd HH:mm:ss,date)}.000&quot;,&#xd;
                &quot;paymentReference&quot;: &quot;${__RandomString(10,abcdeghijklmnopqrstuvwxyz, pr)}&quot;,&#xd;
                &quot;accountHolder&quot;: &quot;${__RandomString(10,abcdeghijklmnopqrstuvwxyz, aholder)}&quot;,&#xd;
                &quot;accountHolderID&quot;: &quot;&quot;,&#xd;
                &quot;accountNumber&quot;: &quot;${__RandomString(8,123456789,an)}&quot;,&#xd;
                &quot;sortCode&quot;: &quot;${__RandomString(2,0123456789,)}-${__RandomString(2,0123456789,)}-${__RandomString(2,0123456789,)}&quot;,&#xd;
                &quot;ThirdParty&quot;: &quot;&quot;,&#xd;
                &quot;ThirdPartyID&quot;: &quot;&quot;,&#xd;
                &quot;Paymenttype&quot;: &quot;${__RandomFromMultipleVars(payType0|payType1|payType2|payType3,)}&quot;,&#xd;
                &quot;PaymentSubtype&quot;: &quot;&quot;,&#xd;
                &quot;creditOrDebit&quot;: &quot;${__RandomFromMultipleVars(credit|debit,)}&quot;,&#xd;
                &quot;currencyCode&quot;: &quot;${__RandomFromMultipleVars(cCode0|cCode1|cCode2|cCode3,)}&quot;,&#xd;
                &quot;countryOfTransaction&quot;: &quot;${__RandomFromMultipleVars(cot0|cot1|cot2,)}&quot;,&#xd;
                &quot;IBAN&quot;: &quot;${__RandomString(2,ABSCDEFGHIJKLMNOPQRSTUVWXYZ,)}${__Random(10,99)}${__RandomString(9,0123456789)}&quot;,&#xd;
                &quot;amount&quot;: ${__Random(1,500)}.${__Random(0,9)}${__Random(0,9)},&#xd;
                &quot;balance&quot;: ${__Random(1,9000)}.${__Random(0,9)}${__Random(0,9)},&#xd;
                &quot;externalRuleOutcomes&quot;: [&#xd;
                    {&#xd;
                        &quot;code&quot;: &quot;EntityType&quot;,&#xd;
                        &quot;outcome&quot;: &quot;${__RandomFromMultipleVars(outcome0|outcome1,)}&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>

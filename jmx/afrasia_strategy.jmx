<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="PerformanceTest" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <stringProp name="ThreadGroup.num_threads">${__P(threads, 1)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(period, 0)}</stringProp>
        <longProp name="ThreadGroup.duration">30</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">${__P(loops, 1)}</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Loop Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">loop_counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">true</boolProp>
        </CounterConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Thread Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">thread_counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters">
          <collectionProp name="UserParameters.names">
            <stringProp name="-1562235024">thread_id</stringProp>
            <stringProp name="100589">env</stringProp>
            <stringProp name="-1587595929">strategy_id</stringProp>
            <stringProp name="-1352291591">credit</stringProp>
            <stringProp name="95458540">debit</stringProp>
            <stringProp name="-477398544">paymenttype0</stringProp>
            <stringProp name="-477398543">paymenttype1</stringProp>
            <stringProp name="-477398542">paymenttype2</stringProp>
            <stringProp name="-477398541">paymenttype3</stringProp>
            <stringProp name="-477398540">paymenttype4</stringProp>
            <stringProp name="-477398539">paymenttype5</stringProp>
            <stringProp name="-477398538">paymenttype6</stringProp>
            <stringProp name="1433776668">paymentSubtype0</stringProp>
            <stringProp name="1433776669">paymentSubtype1</stringProp>
            <stringProp name="1433776670">paymentSubtype2</stringProp>
            <stringProp name="1986921919">countryOfTransaction0</stringProp>
            <stringProp name="1986921920">countryOfTransaction1</stringProp>
            <stringProp name="1986921921">countryOfTransaction2</stringProp>
            <stringProp name="1986921922">countryOfTransaction3</stringProp>
            <stringProp name="1986921923">countryOfTransaction4</stringProp>
            <stringProp name="1986921924">countryOfTransaction5</stringProp>
            <stringProp name="1986921925">countryOfTransaction6</stringProp>
            <stringProp name="-265020250">ResidentType0</stringProp>
            <stringProp name="-265020249">ResidentType1</stringProp>
            <stringProp name="-265020248">ResidentType2</stringProp>
            <stringProp name="345376785">Exempt0</stringProp>
            <stringProp name="345376786">Exempt1</stringProp>
            <stringProp name="422220795">PepType0</stringProp>
            <stringProp name="422220796">PepType1</stringProp>
            <stringProp name="422220797">PepType2</stringProp>
            <stringProp name="422220798">PepType3</stringProp>
            <stringProp name="422220799">PepType4</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-1039860117">
              <stringProp name="118040362">${__UUID()}</stringProp>
              <stringProp name="2085912802">${__P(env,pp)}</stringProp>
              <stringProp name="-244497719">${__P(strategy_id,1486)}</stringProp>
              <stringProp name="1996005113">CREDIT</stringProp>
              <stringProp name="64920780">DEBIT</stringProp>
              <stringProp name="66687">CHD</stringProp>
              <stringProp name="66978">CQP</stringProp>
              <stringProp name="79117">PFC</stringProp>
              <stringProp name="66706">CHW</stringProp>
              <stringProp name="81854">SAL</stringProp>
              <stringProp name="64647">ADJ</stringProp>
              <stringProp name="76637">MSC</stringProp>
              <stringProp name="2217378">HIGH</stringProp>
              <stringProp name="-1638684809">TRUST_RESIDENT</stringProp>
              <stringProp name="-1795123364">FOUNDATION_RESIDENT</stringProp>
              <stringProp name="66912">COL</stringProp>
              <stringProp name="64887">ALB</stringProp>
              <stringProp name="68203">DZA</stringProp>
              <stringProp name="64745">AGO</stringProp>
              <stringProp name="65084">ARM</stringProp>
              <stringProp name="65324">AZE</stringProp>
              <stringProp name="65741">BHS</stringProp>
              <stringProp name="-2019679191">ResidentIndividual</stringProp>
              <stringProp name="-489614123">ResidentCorporate</stringProp>
              <stringProp name="430961096">NonResidentCorporate</stringProp>
              <stringProp name="2058813407">EXEMPT</stringProp>
              <stringProp name="1952380128">NOEXEMPT</stringProp>
              <stringProp name="-1755646476">PEPIndividual</stringProp>
              <stringProp name="211639722">PEPCorporate</stringProp>
              <stringProp name="-1537870714">PEPAssociation</stringProp>
              <stringProp name="1674675778">PEPTradingPartner</stringProp>
              <stringProp name="160338802">DIFCResident</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Basic ${__P(token)}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <stringProp name="HTTPSampler.domain">${env}.trunarrative.cloud</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/TruAccountAPI/rest/Accounts/v1/RunStrategy</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.implementation"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${__P(requests,1)}</stringProp>
        </LoopController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">counter</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">true</boolProp>
            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
          </CounterConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${loop_counter} Request ${thread_counter}:${counter}" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{  &#xd;
	&quot;accountStrategyId&quot;: ${strategy_id},&#xd;
	  &quot;accountReference&quot;: &quot;35&quot;,&#xd;
	  &quot;FinancialAccount&quot;: {    &#xd;
		&quot;FinancialTransaction&quot;: [      {        &#xd;
			&quot;clientReference&quot;: &quot;${__RandomString(16,ABCDEFGHIJKLMNOPQRSTUVWXYZ,0123456789)}&quot;,&#xd;
			        &quot;sortCode&quot;: &quot;111111&quot;,&#xd;
			        &quot;thirdPartyID&quot;: &quot;${__RandomString(8,123456789,myvar)}&quot;,&#xd;
			        &quot;creditOrDebit&quot;: &quot;${__RandomFromMultipleVars(credit|debit,)}&quot;,&#xd;
			        &quot;currencyCode&quot;: &quot;MUR&quot;,&#xd;
			        &quot;paymentType&quot;: &quot;${__RandomFromMultipleVars(paymenttype0|paymenttype1|paymenttype2|paymenttype3|paymenttype4|paymenttype5|paymenttype6,)}&quot;,&#xd;
			        &quot;paymentSubtype&quot;: &quot;${__RandomFromMultipleVars(paymentSubtype0|paymentSubtype1|paymentSubtype2,)}&quot;,&#xd;
			        &quot;amount&quot;: &quot;${__Random(50000,100000)}.${__Random(0,9)}${__Random(0,9)}&quot;,&#xd;
			        &quot;effectiveDateTime&quot;: &quot;2023-02-21&quot;,&#xd;
			        &quot;countryOfTransaction&quot;: &quot;${__RandomFromMultipleVars(countryOfTransaction0|countryOfTransaction1|countryOfTransaction2|countryOfTransaction3|countryOfTransaction4|countryOfTransaction5|countryOfTransaction6,)}&quot;,&#xd;
			        &quot;externalRuleOutcomes&quot;: [          {            &#xd;
				&quot;code&quot;: &quot;RESIDENTTYPE&quot;,&#xd;
				            &quot;outcome&quot;: &quot;${__RandomFromMultipleVars(ResidentType0|ResidentType1|ResidentType2,)}&quot;          &#xd;
			},            {            &#xd;
				&quot;code&quot;: &quot;EXEMPT&quot;,&#xd;
				            &quot;outcome&quot;: &quot;${__RandomFromMultipleVars(Exempt0|Exempt1,)}&quot;          &#xd;
			},            {            &#xd;
				&quot;code&quot;: &quot;YEARLYTURNOVER&quot;,&#xd;
				            &quot;outcome&quot;: &quot;2600000&quot;          &#xd;
			},            {            &#xd;
				&quot;code&quot;: &quot;YEARLYCASHTURNOVER&quot;,&#xd;
				            &quot;outcome&quot;: &quot;1000000&quot;          &#xd;
			},            {            &#xd;
				&quot;code&quot;: &quot;ACCOUTNUMBER&quot;,&#xd;
				            &quot;outcome&quot;: &quot;69593&quot;          &#xd;
			},            {            &#xd;
				&quot;code&quot;: &quot;PEPTYPE&quot;,&#xd;
				            &quot;outcome&quot;: &quot;${__RandomFromMultipleVars(PepType0|PepType1|PepType2|PepType3|PepType4,)}&quot;          &#xd;
			}        ]      &#xd;
		}    ]  &#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>

config:
  phases:
    - name: 300s_1rps
      duration: 300
      arrivalRate: 1
  ensure:
    maxErrorRate: 0
    thresholds:
      - http.response_time.min: 2000
      - http.response_time.mean: 4000
      - http.response_time.p95: 4000
      - http.response_time.p99: 5000
      - http.response_time.max: 6000
  payload:
    - path: "../data/effectiveDateTime.csv"
      fields:
        - effectiveDateTime
  variables:
    transaction_type: ["CREDIT", "DEBIT"]
    paymenttype: ["payercreated",""]
    Paymentsubtype: ["Marketplace",""]
    risk: ["LOW", "MEDIUM", "HIGH"]
    continentcohort1: ["NORTHAM", "SOUTHAM", "ASIA", "OCEANIA", "EUROPE"]
    continentcohort2: ["NORTHAM", "SOUTHAM", "ASIA", "OCEANIA", "EUROPE"]
    corporate: ["CORPORATE", "INDIVIDUAL"]
    type: ["CORPORATE", "INDIVIDUAL"]
    size: ["SMALL", "MEDIUM", "LARGE"]

scenarios:
  - name: "Test Paytrix Strategy in PP"
    flow:
      - post:
          url: "/TruAccountAPI/rest/Accounts/v1/RunStrategy"
          json:
            {
              "accountStrategyId": 1470,
              "accountReference": "{{ $randCatchPhrase() }}",
              "application": {
                "clientApplicationReference": "",
                "country": "GBR"
              },
              "company": [
                {
                  "isPrimary": true, 
                  "clientReference": "",
                  "businessName": "{{ $randCompanyName() }}",
                  "companyType": "ASSOCIATION", 
                  "finance": {
                    "bankAccount": [
                      {
                        "name": "{{ $randCompanyName() }}",
                        "IBAN": "{{ $randIban() }}",
                        "swiftCode": "{{ $randSwift() }}",
                        "purpose": "CORRESPONDENT"
                      },
                      {
                        "name": "{{ $randCompanyName() }}",
                        "IBAN": "{{ $randIban() }}",
                        "swiftCode": "dfgdfg978fgdlfkghjdfd",
                        "purpose": "INTERMEDIARY"
                      }
                    ]
                  }
                }
              ],
              "financialAccount": {
                "financialTransaction": [
                  {
                    "effectiveDateTime": "{{ effectiveDateTime }}",
                    "paymentReference": "{{ $randCatchPhrase() }}",
                    "accountHolder": "{{ $randFullName() }}",
                    "accountNumber": "{{ $randAccount() }}",
                    "ThirdParty": "",
                    "ThirdPartyID": "{{ $randAccount() }}",
                    "paymenttype": "{{ paymenttype }}",
                    "Paymentsubtype": "Marketplace",
                    "IBAN": "{{ $randIban() }}",
                    "creditOrDebit": "{{ transaction_type }}",
                    "currencyCode": "GBP", 
                    "amount": "{{ $randAmount() }}",
                    "balance": "{{ $randAmount() }}",
                    "externalRuleOutcomes": [
                      {
                        "code": "RISK",
                        "outcome": "{{ risk }}"
                      },
                      {
                        "code": "UNDERLYING",
                        "outcome": "{{ $randBoolean() }}"
                      },
                      {
                        "code": "THRESHOLD",
                        "outcome": "{{ $randNumber() }}"
                      },
                      {
                        "code": "CONTINENTCOHORT",
                        "outcome": "{{ continentcohort1 }}, {{ continentcohort2 }}"
                      },
                      {
                        "code": "TYPE",
                        "outcome": "{{ corporate }}"
                      },
                      {
                        "code": "SIZE",
                        "outcome": "{{ size }}"
                      },
                      {
                        "code": "UNDERLYING",
                        "outcome": "{{ $randBoolean() }}"
                      },
                      {
                        "code": "AMLRISK",
                        "outcome": "{{ risk }}"
                      }
                    ]
                  }
                ]
              }
            }


name: DB Cleanup
run-name: ${{ github.actor }} is performing a DB cleanup
on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        description: "ENV"
        options:
          - pp
      name_prefix:
        required: true
        type: choice
        description: "Name Prefx"
        options:
          - lon-pp
      org_id:
        required: true
        type: string
        description: "Org ID"
        default: "1485"      
jobs:
  start-runner:
    uses: ./.github/workflows/start_runner.yml
  cleanup:
    needs: start-runner
    runs-on: [self-hosted, rn-performance]
    container: 225237029829.dkr.ecr.eu-west-2.amazonaws.com/trunarrative/alpine:infra
    env:
      DB_HOST: "${{ inputs.name_prefix }}-backend-db.trunarrative.cloud"
      DB_NAME: platform
      DB_USER: insight
      CHANNEL: "performance-testing"
      PIPELINE: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
    steps:
      - uses: actions/checkout@v3
      - uses: LexisNexis-RBA/rn-sre-cicd/assume_role@v1
      - uses: LexisNexis-RBA/rn-sre-cicd/ppslack@v1 
      - name: Cleanup
        shell: bash
        run: |
          source assume_role "${{ inputs.environment }}"
          export PGPASSWORD=$(aws secretsmanager get-secret-value --secret-id "tf/${{ inputs.name_prefix }}/platform_database_password" --query SecretString --output text)
          source assume_role -u
          psql --version
          vacuumdb --version
          psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -l
          echo "START=$(date +%s)" >> $GITHUB_ENV
          psql -q -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -v ON_ERROR_STOP=1 -v org_id="${{ inputs.org_id }}" -f performance_data_clean.sql
          vacuumdb -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -z -j 4 -e
          echo "END=$(date +%s)" >> $GITHUB_ENV
          jid=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}/jobs | jq .jobs[-1].id)
          url=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/actions/jobs/$jid | jq .html_url)
          echo "URL=$url" >> $GITHUB_ENV
          echo "[${{ inputs.environment }}] BE DB Cleaned and Vacuumed in $(date -d@$((${{ env.END }}-${{ env.START }})) -u +%H:%M:%S) <${{ env.PIPELINE  }}|Pipeline>, <${{ env.URL }}|Job>" | ppslack -f "${{ github.actor }}" -t "${{ env.CHANNEL }}"
  stop-runner:
    needs: cleanup
    uses: ./.github/workflows/terminate_runner.yml
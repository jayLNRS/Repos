name: Performance test
run-name: ${{ github.actor }} is performing a load test
on:
  workflow_call:
    inputs:
      threads:
        required: true
        type: string
      loops:
        required: true
        type: string
      requests:
        required: true
        type: string
      jmx_file:
        required: true
        type: string
      env:
        required: true
        type: string
      journey_id:
        required: false
        type: string
      strategy_id:
        required: true
        type: string
env:
  HEAP: "-Xms6g -Xmx6g"
  JVM_ARGS: "-Dnashorn.args=--no-deprecation-warning"
  CHANNEL: "performance-testing"
  PIPELINE: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
jobs:
  test:
    runs-on: [self-hosted, rn-performance]
    container: 225237029829.dkr.ecr.eu-west-2.amazonaws.com/trunarrative/alpine:infra
    steps:
      - uses: actions/checkout@v3
      - uses: LexisNexis-RBA/rn-sre-cicd/ppslack@v1
      - name: Run test
        run: |
          export TOKEN=$(aws secretsmanager get-secret-value --secret-id 'devops/performance_testing_token' --output json --region eu-west-2 | jq -r '.SecretString')
          echo "$HEAP"
          echo "$JVM_ARGS"
          echo "${{ inputs.jmx_file}}"
          echo "${{ inputs.loops }}"
          echo "${{ inputs.threads }}"
          echo "${{ inputs.requests }}"
          jmeter --version
          ( jmeter -n -t "jmx/${{ inputs.jmx_file }}.jmx" -Jenv="${{ inputs.env }}" -Jtoken="${TOKEN}" -Jthreads="${{ inputs.threads }}" -Jloops="${{ inputs.loops }}" -Jrequests="${{ inputs.requests }}" -Jjourney_id="${{ inputs.journey_id }}" -Jstrategy_id="${{ inputs.strategy_id }}" 2>&1 || true ) | tee out.txt
          echo "summary=$(grep "^summary =.*in.*.*Avg:.*Min:.*Max:.*Err:.*" out.txt | tail -1)" >> $GITHUB_ENV
        if: ${{ inputs.threads }} != 'null'
      - name: Get job id
        run: |
          jid=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}/jobs | jq .jobs[-1].id)
          url=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/actions/jobs/$jid | jq .html_url)
          echo "URL=$url" >> $GITHUB_ENV
      - name: Post to Slack
        run: |
          echo "${{ env.summary }}" | ppslack -H -f "${{ github.actor }}" -t "${{ env.CHANNEL }}" -s "[${{ inputs.env }}] Performance Test (JMX: ${{ inputs.jmx_file }}, Threads: ${{ inputs.THREADS }}, Requests: ${{ inputs.requests }}, <${{ env.PIPELINE }}|Pipeline>, <${{ env.URL }}|Job>)" || true